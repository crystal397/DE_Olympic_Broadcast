# 11조

version: '3.8'

volumes:
  kafka_volume:
    # 로컬 드라이버를 사용하는 볼륨을 정의합니다.

    driver: local
    # Kafka 데이터는 이 볼륨에 저장됩니다. 이는 컨테이너가 재시작되거나 재배포될 때 데이터가 유지되도록 합니다.

services:
  kafka:
    image: apache/kafka:3.7.1
    container_name: kafka1
    # 컨테이너의 이름을 kafka1로 지정합니다.

    ports:
      - "9092:9092"
      # 호스트의 9092 포트를 컨테이너의 9092 포트에 매핑하여 외부 접근을 허용합니다.

      - "9093:9093"
      # 호스트의 9093 포트를 컨테이너의 9093 포트에 매핑하여 내부 통신을 지원합니다.

    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      # Kafka 프로세스가 담당할 역할을 지정합니다. 여기서는 broker와 controller 역할을 수행하도록 설정되어 있습니다.

      KAFKA_NODE_ID: 1
      # Kafka 노드의 ID를 지정합니다. 이 설정에서는 ID가 1로 설정되어 있습니다.

      # KAFKA_CONTROLLER_QUORUM_VOTERS: 1@172.31.14.224:9093
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@172.31.14.224:9093,2@172.31.12.74:9093,3@172.31.11.125:9093
      # 컨트롤러 투표자의 목록을 설정합니다. 각 투표자는 ID와 IP 주소 및 포트를 포함합니다.

      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      # 컨테이너가 리스닝할 인터페이스와 프로토콜을 설정합니다
      # 모든 네트워크 인터페이스에서 9092 포트를 사용하여 일반 텍스트 프로토콜로 리스닝합니다.
      # 모든 네트워크 인터페이스에서 9093 포트를 사용하여 컨트롤러 역할로 리스닝합니다.

      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.31.14.224:9092
      # 외부에서 접근할 때 사용할 리스너의 주소를 설정합니다.
      # 클라이언트가 연결할 때 사용할 외부 IP와 포트를 명시합니다. doto1

      KAFKA_LOG_DIRS: /var/lib/kafka/data
      # Kafka 로그 데이터가 저장될 디렉토리를 지정합니다. 컨테이너 내부의 데이터 저장 경로입니다.

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      # 각 리스너의 보안 프로토콜을 정의합니다. 모든 리스너에 대해 일반 텍스트 프로토콜을 사용합니다.

      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # 브로커 간 통신에 사용할 리스너 이름을 설정합니다. 브로커 간 통신에 일반 텍스트 프로토콜을 사용합니다.

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      # 자동으로 토픽을 생성하는 기능을 비활성화합니다. 컨트롤러 리스너 이름을 정의합니다.

      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # 컨트롤러로 지정된 리스너 이름입니다.

      KAFKA_LOG_RETENTION_MS: 300000
      # 로그 유지 기간을 밀리초 단위로 설정합니다. 이 설정에서는 5분(300,000ms)으로 설정되어 있습니다.

    volumes:
      - kafka_volume:/var/lib/kafka/data
      # kafka_volume을 /var/lib/kafka/data 디렉토리에 마운트하여 Kafka 데이터를 저장합니다.